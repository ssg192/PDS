{"ast":null,"code":"import axios from'axios';// Configurar la base URL de tu API Quarkus\nconst API_BASE_URL='http://localhost:8080';// Cambié el puerto a 8080 que es el de Quarkus\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Tipos de datos (ajusta según tu backend)\n// Servicios para Pacientes\nexport const pacienteService={getAll:()=>api.get('/api/pacientes'),getById:id=>api.get(\"/api/pacientes/\".concat(id)),create:paciente=>api.post('/api/pacientes',paciente),update:(id,paciente)=>api.put(\"/api/pacientes/\".concat(id),paciente),delete:id=>api.delete(\"/api/pacientes/\".concat(id))};// Servicios para Médicos\nexport const medicoService={// Endpoint específico que mencionaste\ngetEstadisticas:()=>api.get('/Inicio/medicos'),getAll:()=>api.get('/api/medicos'),getById:id=>api.get(\"/api/medicos/\".concat(id)),create:medico=>api.post('/api/medicos',medico),update:(id,medico)=>api.put(\"/api/medicos/\".concat(id),medico),delete:id=>api.delete(\"/api/medicos/\".concat(id))};// Servicios para Citas\nexport const citaService={getAll:()=>api.get('/api/citas'),getById:id=>api.get(\"/api/citas/\".concat(id)),create:cita=>api.post('/api/citas',cita),update:(id,cita)=>api.put(\"/api/citas/\".concat(id),cita),delete:id=>api.delete(\"/api/citas/\".concat(id))};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","pacienteService","getAll","get","getById","id","concat","paciente","post","update","put","delete","medicoService","getEstadisticas","medico","citaService","cita"],"sources":["C:/Users/omarr/OneDrive/Documentos/IPN/7 SEMESTRE/INGENIERIA DE SOFTWARE/TERCER EXAMEN/Examen/hospital/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Configurar la base URL de tu API Quarkus\r\nconst API_BASE_URL = 'http://localhost:8080'; // Cambié el puerto a 8080 que es el de Quarkus\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Tipos de datos (ajusta según tu backend)\r\nexport interface Paciente {\r\n  id?: number;\r\n  nombre: string;\r\n  apellido: string;\r\n  dni: string;\r\n  telefono: string;\r\n  email: string;\r\n  fechaNacimiento: string;\r\n}\r\n\r\nexport interface Medico {\r\n  nombreMedico: string;\r\n  totalCitas: number;\r\n  canceladas: number;\r\n  atendidas: number;\r\n  programadas: number;\r\n}\r\n\r\nexport interface Cita {\r\n  id?: number;\r\n  pacienteId: number;\r\n  doctorId: number;\r\n  fecha: string;\r\n  hora: string;\r\n  motivo: string;\r\n  estado: 'PROGRAMADA' | 'COMPLETADA' | 'CANCELADA';\r\n}\r\n\r\n// Servicios para Pacientes\r\nexport const pacienteService = {\r\n  getAll: () => api.get<Paciente[]>('/api/pacientes'),\r\n  getById: (id: number) => api.get<Paciente>(`/api/pacientes/${id}`),\r\n  create: (paciente: Paciente) => api.post<Paciente>('/api/pacientes', paciente),\r\n  update: (id: number, paciente: Paciente) => api.put<Paciente>(`/api/pacientes/${id}`, paciente),\r\n  delete: (id: number) => api.delete(`/api/pacientes/${id}`),\r\n};\r\n\r\n// Servicios para Médicos\r\nexport const medicoService = {\r\n  // Endpoint específico que mencionaste\r\n  getEstadisticas: () => api.get<Medico[]>('/Inicio/medicos'),\r\n  getAll: () => api.get<Medico[]>('/api/medicos'),\r\n  getById: (id: number) => api.get<Medico>(`/api/medicos/${id}`),\r\n  create: (medico: Medico) => api.post<Medico>('/api/medicos', medico),\r\n  update: (id: number, medico: Medico) => api.put<Medico>(`/api/medicos/${id}`, medico),\r\n  delete: (id: number) => api.delete(`/api/medicos/${id}`),\r\n};\r\n\r\n// Servicios para Citas\r\nexport const citaService = {\r\n  getAll: () => api.get<Cita[]>('/api/citas'),\r\n  getById: (id: number) => api.get<Cita>(`/api/citas/${id}`),\r\n  create: (cita: Cita) => api.post<Cita>('/api/citas', cita),\r\n  update: (id: number, cita: Cita) => api.put<Cita>(`/api/citas/${id}`, cita),\r\n  delete: (id: number) => api.delete(`/api/citas/${id}`),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,YAAY,CAAG,uBAAuB,CAAE;AAE9C,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AA6BA;AACA,MAAO,MAAM,CAAAC,eAAe,CAAG,CAC7BC,MAAM,CAAEA,CAAA,GAAML,GAAG,CAACM,GAAG,CAAa,gBAAgB,CAAC,CACnDC,OAAO,CAAGC,EAAU,EAAKR,GAAG,CAACM,GAAG,mBAAAG,MAAA,CAA6BD,EAAE,CAAE,CAAC,CAClEP,MAAM,CAAGS,QAAkB,EAAKV,GAAG,CAACW,IAAI,CAAW,gBAAgB,CAAED,QAAQ,CAAC,CAC9EE,MAAM,CAAEA,CAACJ,EAAU,CAAEE,QAAkB,GAAKV,GAAG,CAACa,GAAG,mBAAAJ,MAAA,CAA6BD,EAAE,EAAIE,QAAQ,CAAC,CAC/FI,MAAM,CAAGN,EAAU,EAAKR,GAAG,CAACc,MAAM,mBAAAL,MAAA,CAAmBD,EAAE,CAAE,CAC3D,CAAC,CAED;AACA,MAAO,MAAM,CAAAO,aAAa,CAAG,CAC3B;AACAC,eAAe,CAAEA,CAAA,GAAMhB,GAAG,CAACM,GAAG,CAAW,iBAAiB,CAAC,CAC3DD,MAAM,CAAEA,CAAA,GAAML,GAAG,CAACM,GAAG,CAAW,cAAc,CAAC,CAC/CC,OAAO,CAAGC,EAAU,EAAKR,GAAG,CAACM,GAAG,iBAAAG,MAAA,CAAyBD,EAAE,CAAE,CAAC,CAC9DP,MAAM,CAAGgB,MAAc,EAAKjB,GAAG,CAACW,IAAI,CAAS,cAAc,CAAEM,MAAM,CAAC,CACpEL,MAAM,CAAEA,CAACJ,EAAU,CAAES,MAAc,GAAKjB,GAAG,CAACa,GAAG,iBAAAJ,MAAA,CAAyBD,EAAE,EAAIS,MAAM,CAAC,CACrFH,MAAM,CAAGN,EAAU,EAAKR,GAAG,CAACc,MAAM,iBAAAL,MAAA,CAAiBD,EAAE,CAAE,CACzD,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,WAAW,CAAG,CACzBb,MAAM,CAAEA,CAAA,GAAML,GAAG,CAACM,GAAG,CAAS,YAAY,CAAC,CAC3CC,OAAO,CAAGC,EAAU,EAAKR,GAAG,CAACM,GAAG,eAAAG,MAAA,CAAqBD,EAAE,CAAE,CAAC,CAC1DP,MAAM,CAAGkB,IAAU,EAAKnB,GAAG,CAACW,IAAI,CAAO,YAAY,CAAEQ,IAAI,CAAC,CAC1DP,MAAM,CAAEA,CAACJ,EAAU,CAAEW,IAAU,GAAKnB,GAAG,CAACa,GAAG,eAAAJ,MAAA,CAAqBD,EAAE,EAAIW,IAAI,CAAC,CAC3EL,MAAM,CAAGN,EAAU,EAAKR,GAAG,CAACc,MAAM,eAAAL,MAAA,CAAeD,EAAE,CAAE,CACvD,CAAC,CAED,cAAe,CAAAR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}